generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "./dev.db"
}
// Main presentation model (top level content)
model Presentation {
  id           String   @id @default(cuid())
  tcode        String
  chapter      Int
  exercise     String
  filename     String
  questionNo   Int
  part         Int
  name         String   @default("")
  questionType String
  status       String
  sortOrder    Int      @default(0)
  comments     String   @default("")
  tags         String   @default("[]") // Stored as JSON string
  
  // Relationships to slides
  eqSlides     EqSlide[]
  canvasSlides CanvasSlide[]
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
// EqSlide model for equation slides
model EqSlide {
  id          String    @id @default(cuid())
  uuid        String    @unique
  period      Int?      @default(10)
  type        String
  template    String    @default("")
  sortOrder   Int       @default(0) 
  
  // Relationship to parent presentation
  presentation   Presentation @relation(fields: [presentationId], references: [id], onDelete: Cascade)
  presentationId String
  
  // Relationship to items
  items       EqItem[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
// EqItem model for items within equation slides
model EqItem {
  id          String    @id @default(cuid())
  uuid        String    @unique
  name        String?    @default("")
  content     String    @default("")
  showAt      Int
  period      Int       @default(10)
  code        String    @default("")
  type        String
  sortOrder   Int?      @default(0)
  
  // Relationship to parent slide
  slide       EqSlide   @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  // Relationship to solution points
  sp        Sp[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
// Solution Points (sp) model
model Sp {
  id          String    @id @default(cuid())
  code        String
  type        String
  sortOrder   Int       @default(0)
  
  // Relationship to parent item
  item        EqItem    @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId      String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
// Canvas slide model 
model CanvasSlide {
  id              String    @id @default(cuid())
  uuid            String    @unique
  type            String    @default("canvas")
  sortOrder       Int       @default(0)
  name            String?
  period          Int?       @default(10)
  template        String?
  // Relationship to parent presentation  
  presentation   Presentation @relation(fields: [presentationId], references: [id], onDelete: Cascade)
  presentationId String
  
  // Relationship to slideExtra (1-to-1)
  slideExtra    SlideExtra?
  
  // Relationships to canvas items
  textItems      CanvasText[]
  rectangleItems CanvasRectangle[]
  circleItems    CanvasCircle[]
  imageItems     CanvasImage[]
  lineItems      CanvasLine[]
  rayItems       CanvasRay[]
  dotItems       CanvasDot[]
  ellipseItems   CanvasEllipse[]
  iconItems      CanvasIcon[]
  listItems      CanvasList[]
  pieChartItems  CanvasPieChart[]
  angleItems     CanvasAngle[]
  spriteItems    CanvasSprite[]
  triangleItems  CanvasTriangle[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
// SlideExtra model (1-to-1 relationship with CanvasSlide)
model SlideExtra {
  id                String    @id @default(cuid())
  color             String    @default("gray")
  opacity           Float     @default(0.7)
  backgroundColor   String    @default("#363446")
  cellHeight        Float     @default(25)
  cellWidth         Float     @default(25)
  backgroundImage   String?
  showGrid          Boolean   @default(false)
  gridLineWidth     Float     @default(1)
  gridLineColor     String    @default("black")
  
  // Relationship to canvas slide (1-to-1)
  slide             CanvasSlide @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId           String      @unique // This makes it a 1-to-1 relationship
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
// Base fields for all canvas items
// Note: These are common fields shared across all item types
model CanvasText {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("text")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  x           Float
  y           Float
  rotation    Float     @default(0)
  
  // Text-specific fields
  text        String
  fontSize    Float
  fontFamily  String
  width       Float
  height      Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasRectangle {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("rectangle")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  x           Float
  y           Float
  rotation    Float     @default(0)
  
  // Rectangle-specific fields
  width       Float
  height      Float
  filled      Boolean   @default(false)
  lineWidth   Float     @default(1)
  dash        Float     @default(0)
  gap         Float     @default(0)
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasCircle {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("circle")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  x           Float
  y           Float
  
  // Circle-specific fields
  radius      Float
  startAngle  Float
  endAngle    Float
  lineWidth   Float
  dash        Float
  gap         Float
  filled      Boolean
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasImage {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("image")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String    @default("")
  x           Float
  y           Float
  rotation    Float     @default(0)
  
  // Image-specific fields
  src         String
  width       Float
  height      Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasLine {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("line")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  rotation    Float     @default(0)
  
  // Line-specific fields
  x1          Float
  y1          Float
  x2          Float
  y2          Float
  lineWidth   Float
  dash        Float
  gap         Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasRay {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("ray")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Ray-specific fields
  x1          Float
  y1          Float
  x2          Float
  y2          Float
  lineWidth   Float
  arrowWidth  Float
  arrowHeight Float
  startArrow  Boolean
  endArrow    Boolean
  dash        Float
  gap         Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasDot {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("dot")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Dot-specific fields
  x           Float
  y           Float
  labelX      Int
  labelY      Int
  label       String
  radius      Float
  textColor   String
  textSize    Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasEllipse {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("ellipse")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Ellipse-specific fields
  x           Float
  y           Float
  radiusX     Float
  radiusY     Float
  rotation    Float
  startAngle  Float
  endAngle    Float
  lineWidth   Float
  filled      Boolean
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasIcon {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("icon")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Icon-specific fields
  x           Float
  y           Float
  text        String
  fontSize    Float
  iconSize    Float
  fontFamily  String
  icon        String
  showBg      Boolean
  iconOnTop   Boolean
  iconErrorX  Float
  iconErrorY  Float
  bgColor     String
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasList {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("list")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // List-specific fields
  x           Float
  y           Float
  listArray   Json    // Stored as JSON array string
  fontSize    Float
  fontFamily  String
  lineGap     Float
  indentation Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasPieChart {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("piechart")
  name        String    @default("")
  opacity     Float     @default(1)
  
  // PieChart-specific fields
  x           Float
  y           Float
  radius      Float
  data   Json   
  showLabels  Boolean
  labelFontSize Float
  labelColor  String
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasAngle {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("angle")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Angle-specific fields
  x           Float
  y           Float
  radius      Float
  ticks       Int
  startAngle  Float
  endAngle    Float
  lineWidth   Float
  showOrigin  Boolean
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasSprite {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("sprite")
  name        String    @default("")
  opacity     Float     @default(1)
  
  // Sprite-specific fields
  src         String
  selectedItem String
  x           Float
  y           Float
  width       Float
  height      Float
  rotation    Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model CanvasTriangle {
  id          String    @id @default(cuid())
  uuid        String    @unique
  type        String    @default("triangle")
  name        String    @default("")
  opacity     Float     @default(1)
  color       String
  
  // Triangle-specific fields
  x1          Float
  y1          Float
  x2          Float
  y2          Float
  x3          Float
  y3          Float
  rotation    Float
  lineWidth   Float
  filled      Boolean
  dash        Float
  gap         Float
  
  // Relationship to parent slide
  slide       CanvasSlide  @relation(fields: [slideId], references: [id], onDelete: Cascade)
  slideId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
